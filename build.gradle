plugins {
    id 'com.github.johnrengelman.shadow' version '5.1.0'
    id 'checkstyle'
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'jacoco'

project.ext {
    cucumberVersion = '4.7.4'
    junitVersion = '4.12'
    seleniumVersion = '3.14.0'
    fluentleniumVersion = '4.3.0'
}

repositories {
    jcenter()
    mavenCentral()
}

task( browse, dependsOn: jar, type: JavaExec ) {
    main = 'lukuvinkkikirjasto.Tester'
    classpath = sourceSets.main.runtimeClasspath
}

dependencies{
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.28.0'
    testCompile 'io.cucumber:cucumber-java:' + cucumberVersion
    testCompile 'io.cucumber:cucumber-junit:' + cucumberVersion
    testCompile 'junit:junit:' + junitVersion
    compile group: 'com.sparkjava', name: 'spark-core', version: '2.7.1'
    compile group: 'com.sparkjava', name: 'spark-template-velocity', version: '2.7.1'
    testCompile group: 'org.fluentlenium', name: 'fluentlenium-core', version: fluentleniumVersion
    testCompile group: 'org.fluentlenium', name: 'fluentlenium-assertj', version: fluentleniumVersion  
    compile group: 'org.seleniumhq.selenium', name: 'selenium-firefox-driver', version:seleniumVersion
    compile group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version:seleniumVersion
    compile group: 'org.seleniumhq.selenium', name: 'selenium-api', version:seleniumVersion
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version:seleniumVersion   
    compile group: 'org.seleniumhq.selenium', name: 'htmlunit-driver', version: '2.33.0'
    compile 'com.google.guava:guava:20.0'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.8'
}

jar {
    manifest {
        attributes 'Main-Class' : 'lukuvinkkikirjasto.Main'
    }
}

mainClassName = 'lukuvinkkikirjasto.Main'

run {
    standardInput = System.in
}

test {
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
                    fileTree(dir: it, exclude: ['lukuvinkkikirjasto/UI/*', 'lukuvinkkikirjasto/Main*', 'lukuvinkkikirjasto/Tester*', 'lukuvinkkikirjasto/dao/DatabaseLinkDaoHeroku*'])
                }))
    }
}

applicationName = 'lukuvinkkikirjasto'
task stage(dependsOn: ['clean', 'installDist'])
installDist.mustRunAfter clean
